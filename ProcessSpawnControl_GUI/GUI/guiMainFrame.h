#ifndef __guiMainFrame__
#define __guiMainFrame__

/**
@file
Subclass of MainFrame, which is generated by wxFormBuilder.
*/

#include "gui.h"

//// end generated include
#include "../Loader.h"
#include "../SpawnControl.h"
#include <thread>

wxDECLARE_EVENT(wxEVT_CATCH_PROC, wxThreadEvent);
wxDECLARE_EVENT(wxEVT_CHANGE_SIZE, wxCommandEvent);
wxDECLARE_EVENT(wxEVT_HOTKEY_STOP, wxCommandEvent);

/** Implementing MainFrame */
class guiMainFrame : public MainFrame
{
	protected:
		// Handlers for MainFrame events.
		void Cleanup( wxCloseEvent& event );
		void ClearLog_click( wxCommandEvent& event );
		void Start_click( wxCommandEvent& event );
		void Stop_click( wxCommandEvent& event );
		void Clear_click( wxCommandEvent& event );
		void SetTargetDropPath( wxDropFilesEvent& event );
		void SetParentDropPath( wxDropFilesEvent& event );
		void AlwaysOnTop_Check( wxCommandEvent& event );
		void SetExclusionsDropPath( wxDropFilesEvent& event );
		void LoadExclusions_click( wxCommandEvent& event );
		void AddExclusion_click( wxCommandEvent& event );
		void DeleteExclusion_click( wxCommandEvent& event );
		void AddExclusion_enter( wxCommandEvent& event );
		void Exclusions_doubleClick( wxCommandEvent& event );
	public:
		/** Constructor */
		guiMainFrame( wxWindow* parent );
	//// end generated class members
		bool AddExclusion(wxString exclusion, bool selectDuplicate = true);
		bool ContainExclusion(wxString procName);
		void DeleteExclusion();
		void AddProcItem(ProcInfo proc);
		void LogMessage(wxString message, bool highlight = false, wxColour colour = wxColour(0, 0, 0));
		void LogError(wxString err);
		StartupOptions Options;
		
private:
	wxColour red = wxColour(170, 0, 0);
	wxColour green = wxColour(0, 110, 0);
	wxColour yellow = wxColour(255, 255, 0);
	wxColour blue = wxColour(0, 0, 255);
	wxColour black = wxColour(0, 0, 0);
	std::thread Worker;
	std::thread Searcher;
	std::thread HotKeyStop;
	std::atomic<bool> IsRunning;
	void SetHighPriority();
	bool GetOptions(StartupOptions& options);
	void LogAddProcItem(wxString procDesc);
	void StopSpawnControl();
	void SetLaunchControlsEnabled(bool enabled);
	void CheckLoaderStatus(Loader::OperationStatus status);
	void CheckSpawnControlStatus(SpawnControl::OperationStatus status);
	void EnableDragAndDropForAdmin();
	void OnHotkey(wxCommandEvent& event);
	void OnCatchProc(wxThreadEvent& event);
	void OnChangeSize(wxCommandEvent& event);
	void WorkerTask();
	void SearcherTask();
	void HotKeyStopTask();
	void RemoveLoader();
	void ClearProcQueue();
	void ClearProcItems();






























};

#endif // __guiMainFrame__
